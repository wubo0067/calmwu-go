// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto_hs.proto

#ifndef PROTOBUF_proto_5fhs_2eproto__INCLUDED
#define PROTOBUF_proto_5fhs_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3005001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace protobuf_proto_5fhs_2eproto {
// Internal implementation detail -- do not use these members.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[4];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors();
void InitDefaultsProtoSynImpl();
void InitDefaultsProtoSyn();
void InitDefaultsProtoAsynImpl();
void InitDefaultsProtoAsyn();
void InitDefaultsProtoAckImpl();
void InitDefaultsProtoAck();
void InitDefaultsProtoHeartBeatImpl();
void InitDefaultsProtoHeartBeat();
inline void InitDefaults() {
  InitDefaultsProtoSyn();
  InitDefaultsProtoAsyn();
  InitDefaultsProtoAck();
  InitDefaultsProtoHeartBeat();
}
}  // namespace protobuf_proto_5fhs_2eproto
namespace protocol {
class ProtoAck;
class ProtoAckDefaultTypeInternal;
extern ProtoAckDefaultTypeInternal _ProtoAck_default_instance_;
class ProtoAsyn;
class ProtoAsynDefaultTypeInternal;
extern ProtoAsynDefaultTypeInternal _ProtoAsyn_default_instance_;
class ProtoHeartBeat;
class ProtoHeartBeatDefaultTypeInternal;
extern ProtoHeartBeatDefaultTypeInternal _ProtoHeartBeat_default_instance_;
class ProtoSyn;
class ProtoSynDefaultTypeInternal;
extern ProtoSynDefaultTypeInternal _ProtoSyn_default_instance_;
}  // namespace protocol
namespace protocol {

// ===================================================================

class ProtoSyn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ProtoSyn) */ {
 public:
  ProtoSyn();
  virtual ~ProtoSyn();

  ProtoSyn(const ProtoSyn& from);

  inline ProtoSyn& operator=(const ProtoSyn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoSyn(ProtoSyn&& from) noexcept
    : ProtoSyn() {
    *this = ::std::move(from);
  }

  inline ProtoSyn& operator=(ProtoSyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoSyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoSyn* internal_default_instance() {
    return reinterpret_cast<const ProtoSyn*>(
               &_ProtoSyn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(ProtoSyn* other);
  friend void swap(ProtoSyn& a, ProtoSyn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoSyn* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoSyn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoSyn& from);
  void MergeFrom(const ProtoSyn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoSyn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes VerifyBuf = 1;
  void clear_verifybuf();
  static const int kVerifyBufFieldNumber = 1;
  const ::std::string& verifybuf() const;
  void set_verifybuf(const ::std::string& value);
  #if LANG_CXX11
  void set_verifybuf(::std::string&& value);
  #endif
  void set_verifybuf(const char* value);
  void set_verifybuf(const void* value, size_t size);
  ::std::string* mutable_verifybuf();
  ::std::string* release_verifybuf();
  void set_allocated_verifybuf(::std::string* verifybuf);

  // bytes DHClientPubKey = 2;
  void clear_dhclientpubkey();
  static const int kDHClientPubKeyFieldNumber = 2;
  const ::std::string& dhclientpubkey() const;
  void set_dhclientpubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_dhclientpubkey(::std::string&& value);
  #endif
  void set_dhclientpubkey(const char* value);
  void set_dhclientpubkey(const void* value, size_t size);
  ::std::string* mutable_dhclientpubkey();
  ::std::string* release_dhclientpubkey();
  void set_allocated_dhclientpubkey(::std::string* dhclientpubkey);

  // @@protoc_insertion_point(class_scope:protocol.ProtoSyn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr verifybuf_;
  ::google::protobuf::internal::ArenaStringPtr dhclientpubkey_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fhs_2eproto::TableStruct;
  friend void ::protobuf_proto_5fhs_2eproto::InitDefaultsProtoSynImpl();
};
// -------------------------------------------------------------------

class ProtoAsyn : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ProtoAsyn) */ {
 public:
  ProtoAsyn();
  virtual ~ProtoAsyn();

  ProtoAsyn(const ProtoAsyn& from);

  inline ProtoAsyn& operator=(const ProtoAsyn& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoAsyn(ProtoAsyn&& from) noexcept
    : ProtoAsyn() {
    *this = ::std::move(from);
  }

  inline ProtoAsyn& operator=(ProtoAsyn&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAsyn& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoAsyn* internal_default_instance() {
    return reinterpret_cast<const ProtoAsyn*>(
               &_ProtoAsyn_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(ProtoAsyn* other);
  friend void swap(ProtoAsyn& a, ProtoAsyn& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoAsyn* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoAsyn* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoAsyn& from);
  void MergeFrom(const ProtoAsyn& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoAsyn* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes DHServerPubKey = 1;
  void clear_dhserverpubkey();
  static const int kDHServerPubKeyFieldNumber = 1;
  const ::std::string& dhserverpubkey() const;
  void set_dhserverpubkey(const ::std::string& value);
  #if LANG_CXX11
  void set_dhserverpubkey(::std::string&& value);
  #endif
  void set_dhserverpubkey(const char* value);
  void set_dhserverpubkey(const void* value, size_t size);
  ::std::string* mutable_dhserverpubkey();
  ::std::string* release_dhserverpubkey();
  void set_allocated_dhserverpubkey(::std::string* dhserverpubkey);

  // @@protoc_insertion_point(class_scope:protocol.ProtoAsyn)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr dhserverpubkey_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fhs_2eproto::TableStruct;
  friend void ::protobuf_proto_5fhs_2eproto::InitDefaultsProtoAsynImpl();
};
// -------------------------------------------------------------------

class ProtoAck : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ProtoAck) */ {
 public:
  ProtoAck();
  virtual ~ProtoAck();

  ProtoAck(const ProtoAck& from);

  inline ProtoAck& operator=(const ProtoAck& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoAck(ProtoAck&& from) noexcept
    : ProtoAck() {
    *this = ::std::move(from);
  }

  inline ProtoAck& operator=(ProtoAck&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoAck& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoAck* internal_default_instance() {
    return reinterpret_cast<const ProtoAck*>(
               &_ProtoAck_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(ProtoAck* other);
  friend void swap(ProtoAck& a, ProtoAck& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoAck* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoAck* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoAck& from);
  void MergeFrom(const ProtoAck& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoAck* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // bytes CipherText = 1;
  void clear_ciphertext();
  static const int kCipherTextFieldNumber = 1;
  const ::std::string& ciphertext() const;
  void set_ciphertext(const ::std::string& value);
  #if LANG_CXX11
  void set_ciphertext(::std::string&& value);
  #endif
  void set_ciphertext(const char* value);
  void set_ciphertext(const void* value, size_t size);
  ::std::string* mutable_ciphertext();
  ::std::string* release_ciphertext();
  void set_allocated_ciphertext(::std::string* ciphertext);

  // @@protoc_insertion_point(class_scope:protocol.ProtoAck)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr ciphertext_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fhs_2eproto::TableStruct;
  friend void ::protobuf_proto_5fhs_2eproto::InitDefaultsProtoAckImpl();
};
// -------------------------------------------------------------------

class ProtoHeartBeat : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:protocol.ProtoHeartBeat) */ {
 public:
  ProtoHeartBeat();
  virtual ~ProtoHeartBeat();

  ProtoHeartBeat(const ProtoHeartBeat& from);

  inline ProtoHeartBeat& operator=(const ProtoHeartBeat& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  ProtoHeartBeat(ProtoHeartBeat&& from) noexcept
    : ProtoHeartBeat() {
    *this = ::std::move(from);
  }

  inline ProtoHeartBeat& operator=(ProtoHeartBeat&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProtoHeartBeat& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const ProtoHeartBeat* internal_default_instance() {
    return reinterpret_cast<const ProtoHeartBeat*>(
               &_ProtoHeartBeat_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(ProtoHeartBeat* other);
  friend void swap(ProtoHeartBeat& a, ProtoHeartBeat& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline ProtoHeartBeat* New() const PROTOBUF_FINAL { return New(NULL); }

  ProtoHeartBeat* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const ProtoHeartBeat& from);
  void MergeFrom(const ProtoHeartBeat& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(ProtoHeartBeat* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // sfixed64 Timestamp = 1;
  void clear_timestamp();
  static const int kTimestampFieldNumber = 1;
  ::google::protobuf::int64 timestamp() const;
  void set_timestamp(::google::protobuf::int64 value);

  // @@protoc_insertion_point(class_scope:protocol.ProtoHeartBeat)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::int64 timestamp_;
  mutable int _cached_size_;
  friend struct ::protobuf_proto_5fhs_2eproto::TableStruct;
  friend void ::protobuf_proto_5fhs_2eproto::InitDefaultsProtoHeartBeatImpl();
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ProtoSyn

// bytes VerifyBuf = 1;
inline void ProtoSyn::clear_verifybuf() {
  verifybuf_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoSyn::verifybuf() const {
  // @@protoc_insertion_point(field_get:protocol.ProtoSyn.VerifyBuf)
  return verifybuf_.GetNoArena();
}
inline void ProtoSyn::set_verifybuf(const ::std::string& value) {
  
  verifybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ProtoSyn.VerifyBuf)
}
#if LANG_CXX11
inline void ProtoSyn::set_verifybuf(::std::string&& value) {
  
  verifybuf_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ProtoSyn.VerifyBuf)
}
#endif
inline void ProtoSyn::set_verifybuf(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  verifybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ProtoSyn.VerifyBuf)
}
inline void ProtoSyn::set_verifybuf(const void* value, size_t size) {
  
  verifybuf_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ProtoSyn.VerifyBuf)
}
inline ::std::string* ProtoSyn::mutable_verifybuf() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ProtoSyn.VerifyBuf)
  return verifybuf_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoSyn::release_verifybuf() {
  // @@protoc_insertion_point(field_release:protocol.ProtoSyn.VerifyBuf)
  
  return verifybuf_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoSyn::set_allocated_verifybuf(::std::string* verifybuf) {
  if (verifybuf != NULL) {
    
  } else {
    
  }
  verifybuf_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), verifybuf);
  // @@protoc_insertion_point(field_set_allocated:protocol.ProtoSyn.VerifyBuf)
}

// bytes DHClientPubKey = 2;
inline void ProtoSyn::clear_dhclientpubkey() {
  dhclientpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoSyn::dhclientpubkey() const {
  // @@protoc_insertion_point(field_get:protocol.ProtoSyn.DHClientPubKey)
  return dhclientpubkey_.GetNoArena();
}
inline void ProtoSyn::set_dhclientpubkey(const ::std::string& value) {
  
  dhclientpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ProtoSyn.DHClientPubKey)
}
#if LANG_CXX11
inline void ProtoSyn::set_dhclientpubkey(::std::string&& value) {
  
  dhclientpubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ProtoSyn.DHClientPubKey)
}
#endif
inline void ProtoSyn::set_dhclientpubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dhclientpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ProtoSyn.DHClientPubKey)
}
inline void ProtoSyn::set_dhclientpubkey(const void* value, size_t size) {
  
  dhclientpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ProtoSyn.DHClientPubKey)
}
inline ::std::string* ProtoSyn::mutable_dhclientpubkey() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ProtoSyn.DHClientPubKey)
  return dhclientpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoSyn::release_dhclientpubkey() {
  // @@protoc_insertion_point(field_release:protocol.ProtoSyn.DHClientPubKey)
  
  return dhclientpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoSyn::set_allocated_dhclientpubkey(::std::string* dhclientpubkey) {
  if (dhclientpubkey != NULL) {
    
  } else {
    
  }
  dhclientpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dhclientpubkey);
  // @@protoc_insertion_point(field_set_allocated:protocol.ProtoSyn.DHClientPubKey)
}

// -------------------------------------------------------------------

// ProtoAsyn

// bytes DHServerPubKey = 1;
inline void ProtoAsyn::clear_dhserverpubkey() {
  dhserverpubkey_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoAsyn::dhserverpubkey() const {
  // @@protoc_insertion_point(field_get:protocol.ProtoAsyn.DHServerPubKey)
  return dhserverpubkey_.GetNoArena();
}
inline void ProtoAsyn::set_dhserverpubkey(const ::std::string& value) {
  
  dhserverpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ProtoAsyn.DHServerPubKey)
}
#if LANG_CXX11
inline void ProtoAsyn::set_dhserverpubkey(::std::string&& value) {
  
  dhserverpubkey_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ProtoAsyn.DHServerPubKey)
}
#endif
inline void ProtoAsyn::set_dhserverpubkey(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  dhserverpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ProtoAsyn.DHServerPubKey)
}
inline void ProtoAsyn::set_dhserverpubkey(const void* value, size_t size) {
  
  dhserverpubkey_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ProtoAsyn.DHServerPubKey)
}
inline ::std::string* ProtoAsyn::mutable_dhserverpubkey() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ProtoAsyn.DHServerPubKey)
  return dhserverpubkey_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoAsyn::release_dhserverpubkey() {
  // @@protoc_insertion_point(field_release:protocol.ProtoAsyn.DHServerPubKey)
  
  return dhserverpubkey_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoAsyn::set_allocated_dhserverpubkey(::std::string* dhserverpubkey) {
  if (dhserverpubkey != NULL) {
    
  } else {
    
  }
  dhserverpubkey_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), dhserverpubkey);
  // @@protoc_insertion_point(field_set_allocated:protocol.ProtoAsyn.DHServerPubKey)
}

// -------------------------------------------------------------------

// ProtoAck

// bytes CipherText = 1;
inline void ProtoAck::clear_ciphertext() {
  ciphertext_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& ProtoAck::ciphertext() const {
  // @@protoc_insertion_point(field_get:protocol.ProtoAck.CipherText)
  return ciphertext_.GetNoArena();
}
inline void ProtoAck::set_ciphertext(const ::std::string& value) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:protocol.ProtoAck.CipherText)
}
#if LANG_CXX11
inline void ProtoAck::set_ciphertext(::std::string&& value) {
  
  ciphertext_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:protocol.ProtoAck.CipherText)
}
#endif
inline void ProtoAck::set_ciphertext(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:protocol.ProtoAck.CipherText)
}
inline void ProtoAck::set_ciphertext(const void* value, size_t size) {
  
  ciphertext_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:protocol.ProtoAck.CipherText)
}
inline ::std::string* ProtoAck::mutable_ciphertext() {
  
  // @@protoc_insertion_point(field_mutable:protocol.ProtoAck.CipherText)
  return ciphertext_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* ProtoAck::release_ciphertext() {
  // @@protoc_insertion_point(field_release:protocol.ProtoAck.CipherText)
  
  return ciphertext_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void ProtoAck::set_allocated_ciphertext(::std::string* ciphertext) {
  if (ciphertext != NULL) {
    
  } else {
    
  }
  ciphertext_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ciphertext);
  // @@protoc_insertion_point(field_set_allocated:protocol.ProtoAck.CipherText)
}

// -------------------------------------------------------------------

// ProtoHeartBeat

// sfixed64 Timestamp = 1;
inline void ProtoHeartBeat::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
}
inline ::google::protobuf::int64 ProtoHeartBeat::timestamp() const {
  // @@protoc_insertion_point(field_get:protocol.ProtoHeartBeat.Timestamp)
  return timestamp_;
}
inline void ProtoHeartBeat::set_timestamp(::google::protobuf::int64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:protocol.ProtoHeartBeat.Timestamp)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)

}  // namespace protocol

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proto_5fhs_2eproto__INCLUDED
